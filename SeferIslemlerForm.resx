<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>224, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>